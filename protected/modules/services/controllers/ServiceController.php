<?phpclass ServiceController extends BaseController{       const PAGE_SIZE = 10;    public static function actionsTitles()     {        return array(            "Index"           => "Просмотр списка статей",            "View"            => "Просмотр статьи",            "Search"          => "Поиск статей",            "SectionServices" => "Просмотр статей раздела"        );    }            public function actionIndex()    {        $model = Service::model();        $criteria = $model->dbCriteria;        $criteria->order = 'date DESC';        $pages = new CPagination($model->count($criteria));        $pages->pageSize = self::PAGE_SIZE;        $pages->applyLimit($criteria);        $services = $model->findAll($criteria);		$sections = ServiceSection::model()->findAllByAttributes(			array('parent_id' => null),			array('order' => 'name')		);	       	        $this->render('index', array(            'services' => $services,			'sections' => $sections,            'pages'    => $pages        ));    }    public function actionChangeOrder($id, $order, $class, $from)    {        $model = ActiveRecordModel::model($class);        $model->changeOrder($id, $order);        $this->redirect(base64_decode($from));    }        public function actionView($id)     {           $service = Service::model()->findByPk($id);        if (!$service)        {            $this->pageNotFound();        }                $this->render('view', array('service' => $service));    }            public function actionSearch()     {               if (!$this->request->isAjaxRequest)         {               return;        }                $criteria = new CDbCriteria();              if (isset($_POST['section_id']))         {               $section = ServiceSection::model()->findByPk((int) $_POST['section_id']);                   if (!$section)             {                  return;            }                        $secttion_ids = array($section->id);                          if ($section->childs)             {                foreach ($section->childs as $child)                 {                    $secttion_ids[] = $child->id;                }            }                          $criteria->addInCondition("section_id", $secttion_ids);                             }                      if (isset($_POST['query']))         {            $query = $_POST['query'];                            $criteria->addCondition("`title` LIKE '%{$query}%' OR `text` LIKE '%{$query}%'");         }              $services = Service::model()->ordered()->limit(10)->findAll(Service::PAGE_SIZE);                if ($services)        {            $html = $this->renderPartial('services.views.service._list', array('services' => $services), true);                        if (isset($section))             {                $url = $this->url("/services/section/", array('id'=>$section->id));                $html.= "<br/><br/>                         <div style='text-align:center'>                            <a href='{$url}'>Все услуги данного раздела</a>                         </div>                         <br/>";            }                         echo $html;               }        else         {                       if (isset($section) && isset($query))             {                $url = $this->url("/services/section/", array('id'=>$section->id));                $msg = "В разделе <a class='link_13' href='{$url}'>{$section->name}</a>                        по запросу '{$query}' ничего не найдено.                        <br/><br/>                        Попробуйте <a href='#' id='search_link'>осущест$urlить поиск по всему списку услуг.</a>";            }            elseif (isset($section))             {                $url = $this->url("/services/section/", array('id'=>$section->id));                $msg = "В разделе <a class='link_13' href='{$url}'>{$section->name}</a>                        ничего не найдено.";                            }            else if (isset($query))             {                $msg = "по запросу '{$query}' ничего не найдено.";                            }                        echo $msg;        }    }              public function actionSectionServices($section_id)    {          $section = ServiceSection::model()->findByPk($section_id);        if (!$section)         {            $this->pageNotFound();        }                    $section_ids = array($section->id);                       if ($section->childs)         {            foreach ($section->childs as $child)             {                $section_ids[] = $child->id;                }        }                               $model = Service::model();                $criteria = $model->dbCriteria;        $criteria->addInCondition('section_id', $section_ids);        $pages = new CPagination($model->count($criteria));        $pages->pageSize = self::PAGE_SIZE;        $pages->applyLimit($criteria);                $services = $model->findAll($criteria);                $this->render('SectionServices', array(            'services' => $services,            'section'  => $section,            'pages'    => $pages        ));    }  }